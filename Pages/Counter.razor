@page "/counter"
@inject IJSRuntime JSRuntime
@inject CompileService CompileService


    <textarea id="JavaScripttext" name="javascriptCode" placeholder="JavaScript code" spellcheck="false"></textarea>
<textarea id="C#" class="C#" name="C#code" placeholder="C# code" spellcheck="false" @bind="csCode"></textarea>
    <button type ="submit" @onclick="Run"> run</button>

<div class="iframe-container split">
    <iframe id="javascriptViewer"></iframe>
    <iframe id="csharpViewer" @bind="ResultText"></iframe>
    <pre>@ResultText</pre>
    <pre>@CompileText</pre>
</div>


@code {
    private string csCode { get; set; }
    private string ResultText { get; set; }
    private string CompileText { get; set; }
    private string tester;

    private async Task Run()
    {
        await UpdateJavaScript();
        try
        {
            CompileService.CompileLog = new List<string>();
            ResultText = await CompileService.CompileAndRun(csCode);
            Console.WriteLine("result" + ResultText);
        }
        catch (Exception e)
        {
            CompileService.CompileLog.Add(e.Message);
            CompileService.CompileLog.Add(e.StackTrace);
            throw;

        }
        finally
        {
            CompileText = string.Join("\r\n", CompileService.CompileLog);
            //await JSRuntime.InvokeVoidAsync("displayCsharpOutput", ResultText);
            this.StateHasChanged();
        }

       // await UpdateCSharp();
    }
    private async Task UpdateJavaScript()
    {
        await JSRuntime.InvokeVoidAsync("displayJavaScriptOutput");
    }
    public async Task UpdateCSharp()
    {
        try
        {
            CompileService.CompileLog = new List<string>();
            ResultText = await CompileService.CompileAndRun(csCode);
            Console.WriteLine(ResultText);
        }
        catch(Exception e)
        {
            CompileService.CompileLog.Add(e.Message);
            CompileService.CompileLog.Add(e.StackTrace);
            throw;

        }
        finally
        {
            CompileText = string.Join("\r\n", CompileService.CompileLog);
            //await JSRuntime.InvokeVoidAsync("displayCsharpOutput", ResultText);
            this.StateHasChanged();
        }
    }

}


